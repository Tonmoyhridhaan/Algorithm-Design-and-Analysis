package quick_sort;
import java.util.*;
class Quick_sort
{
	int n;
	Quick_sort(int n)
	{
		this.n = n; 
	}
 
	int find_pivot(int arr[],int l,int r)
	{

		int m = (int)(Math.random()*((r-l))+l);
		//int m = (r+l)/2;
		int tmp = arr[l];arr[l] = arr[m];arr[m] = tmp;
		int pivot = arr[l]; 
		int low = l+1;

		int right = r ;
		while(low<=right)
		{
			while(arr[low]<pivot) low++;
			while(arr[right]>pivot) right--;

			if(low<right)
			{
				tmp = arr[low];arr[low] = arr[right];arr[right] = tmp;
				low++;
				right--;
			}
				
		}
		tmp = arr[right];arr[right] = arr[l];arr[l] = tmp;
 
		return right;
	}
	void i_sort(int arr[],int l, int h)
	{
		int i,j,key;
	    for(i = l+1 ; i<=h ; i++)
	    {
	        key = arr[i];
	        for(j = i-1 ; j>=l && key<arr[j] ; j--)
	        {
	            arr[j+1] = arr[j];
	        }
	        arr[j+1] = key;
	    }
	}
 
	void sort(int arr[],int l,int r)
	{

		if(l<r)
		{
			if(r-l<=17)
			{
				i_sort(arr,l,r);
			}
			else
			{
				int piv = find_pivot(arr,l,r);
				sort(arr,l,piv);
				sort(arr,piv+1,r);
			}
		}
	}
}
public class Main 
{
 
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		int n,i;
		n = sc.nextInt();
		int arr[] = new int[n+2];
		for(i = 0 ;  i<n ; i++)
		{
			arr[i] = sc.nextInt();
		}
		Quick_sort qs = new Quick_sort(n);
		
		qs.sort(arr,0,n-1);
 
		for(i = 0 ; i<n ; i++) System.out.print(arr[i]+" ");
	}
 
}
